* Selfhosted-Everything
notes and plans on how I will selfhost as much as possible. Not all of these will be implemented, but will be tested.

* Infrastructure
Most of this will live on my main server as part of / VMs. I'll work to make as much of this NixOS based and will use VMs / Podman containers to seperate roles and security. Tailscale will be used a lot for the comms backend.

For most of this, it might be easier to use Podman (preferably) or Docker containers with a Tailscale connection built in ([[https://github.com/ChrisLAS/notes/blob/master/audiobookshelf-docker-compose.yml][Audiobookshelf example]]). There's a way to [[https://tailscale.com/kb/1153/enabling-https][use Tailscale to enable HTTPS]] for you so you don't get the scary warnings (even though Tailscale itself is secure). One thing I've noticed after figuring out Tailscale with Keycloak. I can get it added to my list of machines, but if I have to restart it I'll get a new machine in my list. Hopefully, this is a config change I need to make and not a everytime the container is spun up it creates a new identity sort of thing.

* Order of Operations
If this is the (ever changing) list of services, what order should I impliment them? One thing I would like is to have a single sign on (SSO) service so I don't have a million logins to manage. So should I figure out Keycloak first? Or limit my services to ones that have SSO options?

* Long Term Plans
If this comes to fruition and I'm widely using it in the house, I probably should have something other than a single server running it all. Something high availability (HA) or Kubernetes related with some off-site fail over capabilities. But that's hard so I'll think about it later.

Update: Yeah, after thinking about this more I don't want a setup that complex. A single server that host everything, with regular backups, and if it goes down for maintainance so be it. Nothing I'm running here "should" be critical that it can't be down for a half hour every now and then.

* Services
** Project Management
*** [[https://github.com/makeplane/plane][Plane]]
# *** To-Dos
*** [[https://github.com/ovh/utask][uTask]] (?)
*** OpenProject (?)
*** [[https://github.com/paperless-ngx/paperless-ngx][PaperNGX]]
** [[https://awesome-selfhosted.net/tags/inventory-management.html][Inventory]]
*** [[https://snipeitapp.com/][Snipe-IT]]
** Dev Work
*** [[https://about.gitea.com/][Gitea]]
*** [[https://www.jenkins.io/][Jenkins]] (?)
*** [[https://forgejo.org/][Forgejo]] (hard fork of Gitea)
** Ticketing System
** Wiki
*** [[https://js.wiki/][WikiJS]]
*** [[https://github.com/wikimedia/mediawiki][Media Wiki]]
*** [[http://dokuwiki.org/][DookuWiki]]
** Single Sign On (SSO)
*** DONE [[./keycloak/keycloak-compose.yml][Keycloak]]
- [[https://www.keycloak.org/][Keycloak]] seems to be the "default" SSO for a bunch of self-hosted folks
- [[https://du.nkel.dev/blog/2024-02-10_keycloak-docker-compose-nginx/][docker setup blog]]
  - I'll try this out first and see what I need to add. Def need to add Tailscale as the networking.
- There's not much docs in the [[https://www.keycloak.org/getting-started/getting-started-docker][Keycloak Docker page]] for all the variables I could use.
*** [[https://github.com/apereo/cas][CAS]]
** Security
- [[https://securityonionsolutions.com/][SecurityOnion]] (?)
** Networking
*** DONE pfSense
*** OpenSense (hardware required)
*** DONE Unifi Controller (using a different VM)
*** DNS
** Monitoring
*** Prometheus (?)
*** Grafana (?)
*** Kibana (?)
** Cloud Storage
*** [[https://nextcloud.com/][Nextcloud]]
** Personal
*** Calendar
*** Push-Notifications
*** Contacts
*** Personal Relationship Management
**** [[https://github.com/monicahq/monica/tree/4.x][Monica]]
*** Food
**** [[https://tandoor.dev/][Tandoor]]
** Smart Home
This falls into how close can I come to Star Trek or SARA from Eureka?
*** DONE [[https://www.home-assistant.io/][Home Assistant]]
*** Voice control / assistant
** Media
*** Video
**** Jellyfin
*** AudioBooks
**** DONE AudioBookShelf
- maybe [[https://github.com/ChrisLAS/notes/blob/master/audiobookshelf-docker-compose.yml][like this]]?
*** eBooks
*** Music
*** Photos
- computer vision for better search
**** Immich
**** Photo Prism
*** Manga / Graphic Novel
**** Stump
**** Kavita
** Front Page
*** [[https://github.com/bastienwirtz/homer][Homer]]
** Knowledge Management System
** Communication
*** Matrix (?)
*** Email (?)
*** Phone
**** [[https://www.freepbx.org/][FreePBX]]
** Backups
*** ZFS
*** Remote Sites
*** Windows backups
Can I please not have to implement this? It would be so much easier if I could just zfs snapshot everything.
** Recovery Procedures
** Misc
*** [[https://github.com/babybuddy/babybuddy][Baby Buddy]]
If you have a family and want to overdo /everything/!

* Troubleshooting
** Remove-orphans
When you run docker-compose I usually get a warning saying there's orphan containers and that I should remove them. Seems correct, right? When I started adding that flag to my process, ie src_emacs-lisp[:exports code]{docker-compose -f keycloak up --remove-orphans}, it would cause the other containers to get knocked off the tailscale network. I messed with all the networking bits until I tried not using the remove-orphans flag and then it worked. I'm thinking that the tailscale container is one of those "orphans" even though I'm using it. So let there be orphans and I'll clean them up manually later on.
** Tailscale Keys
More of a quirk than anything. I'm using ephemeral keys to manage the containers, each getting their own unique one. When you do this there's several options that Tailscale gives you to tweak. One to make sure to select are the "Ephemeral" and "Resusable" switches. This will, most importantly, remove the container from your list of machines when it disconnects from the network. You'll want this because without it, when you reconnect it'll have an incremented number attached. So instead of a "docker-keycloak" that you can access with "docker-keycloak.<your tailscale network>" you'll get a "docker-keycloak-1" that you have to access with "docker-keycloak-1.<your tailscale network>" messing up all the links you've set up. Making sure the "Reusable" switch is selected will let you use the same key if the machine was kicked off the net.
