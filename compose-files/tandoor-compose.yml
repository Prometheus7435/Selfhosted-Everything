version: "3"
services:
  docker-books:
    hostname: docker-books             # This will become the tailscale device name
    image: tailscale/tailscale
    volumes:
      - ./data/tandoor/tailscale:/var/lib/tailscale        # State data will be stored in this directory
      # - "/dev/net/tun:/dev/net/tun"           # Required for tailscale to work
    # cap_add:                                    # Required for tailscale to work
    #   - net_admin
    #   - sys_module
    # ports:
    #   - 80:80
    environment:
      - TS_AUTHKEY="${TANDOOR-KEY}"
      - TS_USERSPACE=true
    # command: tailscaled
    healthcheck:
      test: "exit 0"
    env_file:
      - ./.env

  db_recipes:
    restart: always
    image: postgres:16-alpine
    volumes:
      - ./data/tandoor/postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env

  web_recipes:
    restart: always
    image: vabene1111/recipes
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/opt/recipes/nginx/conf.d
      - ./data/tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: always
    ports:
      - 80:80
    env_file:
      - ./.env
    depends_on:
      - web_recipes
    volumes:
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - ./mediafiles:/media:ro

volumes:
  nginx_config:
    - ./data/tandoor/nginx_config
  staticfiles:
    - ./data/tandoor/staticfiles
