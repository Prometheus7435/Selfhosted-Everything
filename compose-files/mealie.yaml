---
services:
  ts-mealie:
    image: tailscale/tailscale:latest
    container_name: ts-mealie
    hostname: mealie
    environment:
      - TS_HOSTNAME=mealie
      - TS_AUTHKEY=${MEALIE_KEY}
      - TS_STATE_DIR=${DATA_DIR}/mealie/tailscale
      - TS_USERSPACE=false
    volumes:
      - ${DATA_DIR}/mealie/tailscale:/var/lib/tailscale
      - ${DATA_DIR}/mealie/tls:/mnt/tls
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 9925:9000
      - 5433:5432
    cap_add:
      - net_admin
      - sys_module
    healthcheck:
      test: "exit 0"
    restart: unless-stopped

  mealie:
    image: ghcr.io/mealie-recipes/mealie:latest
    container_name: mealie
    restart: always
    network_mode: service:ts-mealie
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1000M #
    volumes:
      - ${DATA_DIR}/mealie/data:/app/data/
    environment:
      ALLOW_SIGNUP: "false"
      PUID: 1000
      PGID: 1000
      TZ: ${HOME_TIMEZONE}
      BASE_URL: http://mealie.${TS_DOMAIN}
      DB_ENGINE: postgres
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: mealie
      POSTGRES_SERVER: mealie-postgres
      POSTGRES_PORT: 5433
      POSTGRES_DB: mealie
    depends_on:
      mealie-postgres:
        condition: service_healthy

  mealie-postgres:
    container_name: mealie-postgres
    image: postgres:15
    restart: always
    volumes:
      - ${DATA_DIR}/mealie/pgdata:/var/lib/postgresql/data
    network_mode: service:ts-mealie
    environment:
      POSTGRES_PASSWORD: mealie
      POSTGRES_USER: mealie
      PGUSER: mealie
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      ts-mealie:
        condition: service_healthy

volumes:
  data:
  pgdata:
  tailscale:
  tls:
